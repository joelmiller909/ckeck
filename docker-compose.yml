version: '3.8'

services:
  dev:
    container_name: app_dev
    image: app-dev:1.0.0
    env_file: .env
    build:
      context: .
      target: development
      dockerfile: ./Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 3000:3000
    depends_on:
      - postgresql
    working_dir: /app
    volumes:
      - ./:/app
      - /app/node_modules
    command: npm run start:dev
    restart: unless-stopped
  prod:
    container_name: app_prod
    image: app-prod:1.0.0
    env_file: .env
    build:
      context: .
      target: production
      dockerfile: ./Dockerfile
    ports:
      - ${SERVER_PORT}:${SERVER_PORT}
      - 3000:3000
    depends_on:
      - postgresql
    working_dir: /app
    volumes:
      - ./:/app
      - /app/node_modules
    command: npm run start:prod
    restart: unless-stopped
  postgresql:
    container_name: postgresql
    image: postgres
    restart: always
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
      - 5432:5432
    environment:
      POSTGRES_DB: ${DATABASE}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}